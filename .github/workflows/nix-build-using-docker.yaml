---
name: nix-build-on-demand-docker
on:
  push:
    paths:
      - '**/*.nix'

jobs:
  build-dev-image:
    name: Build dev image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        timeout-minutes: 12

      - name: Setup variables
        id: vars
        run: |
          build_date=$(date +%Y%m%d%H%M)
          echo "tag-name=${{ steps.build_name.outputs.result }}-${build_date}" >> "$GITHUB_OUTPUT"
          echo "iso-name=ovos-nix-${{ steps.build_name.outputs.result }}-${{ steps.build_branch.outputs.result }}-${build_date}-aarch64.img" >> "$GITHUB_OUTPUT"
          echo "build-output=ovos-nix-sd-image-aarch64-linux.img" >> "$GITHUB_OUTPUT"

      - name: Debug
        run: |
          echo "${{ steps.vars.outputs.tag-name }}"
          echo "${{ steps.vars.outputs.iso-name }}"
          echo "${{ steps.vars.outputs.build-output }}"

      - name: Build image
        run: sudo bash build.sh

      - name: Rename iso
        run: |
          mkdir output
          mv ./${{ steps.vars.outputs.build-output }} output/${{ steps.vars.outputs.iso-name }}

      - uses: actions/upload-artifact@v3
        with:
          name: sd-image.img
          path: "output/${{ steps.vars.outputs.iso-name }}"

      - name: Create release with artifact
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e
        with:
          #token: "${{ steps.generate-token.outputs.token }}"
          tag: "ovos-nix-${{ steps.vars.outputs.tag-name }}"
          artifacts: "output/${{ steps.vars.outputs.iso-name }}"
          artifactErrorsFailBuild: true
