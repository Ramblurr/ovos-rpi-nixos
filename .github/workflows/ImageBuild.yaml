---
name: Build RPI Image
on:
  workflow_dispatch:
  push:
    paths:
      - "**/*.nix"

jobs:

  build-image:
    name: Build dev image
    runs-on: ubuntu-latest
    outputs:
      iso-name: ${{ steps.vars.outputs.iso-name }}
      tag-name: ${{ steps.vars.outputs.tag-name }}
    steps:
      - uses: actions/checkout@v3.5.3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        timeout-minutes: 12

      - name: Setup variables
        id: vars
        run: |
          build_date=$(date +%Y%m%d%H%M)
          echo "tag-name=${{ steps.build_name.outputs.result }}-${build_date}" >> "$GITHUB_OUTPUT"
          echo "iso-name=ovos-nix-${{ steps.build_name.outputs.result }}-${{ steps.build_branch.outputs.result }}-${build_date}-aarch64.img" >> "$GITHUB_OUTPUT"
          echo "build-output=ovos-nix-sd-image-aarch64-linux.img" >> "$GITHUB_OUTPUT"

      - name: Debug
        run: |
          echo "${{ steps.vars.outputs.tag-name }}"
          echo "${{ steps.vars.outputs.iso-name }}"
          echo "${{ steps.vars.outputs.build-output }}"

      - name: Build image
        run: sudo bash build.sh

      - name: Rename iso
        run: |
          mkdir output
          mv ./${{ steps.vars.outputs.build-output }} output/${{ steps.vars.outputs.iso-name }}

      - name: Cache Image
        id: cache-image
        uses: actions/cache@v3
        with:
          path: output
          key: output

  release-image:
    permissions:
      contents: write
    name: Release Image
    needs: build-image
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load Image Cache
        id: cache-image
        uses: actions/cache@v3
        with:
          path: output
          key: output

      - env:
          TAG_NAME: ${{needs.build-image.outputs.tag-name}}
          ISO_NAME: ${{needs.build-image.outputs.iso-name}}
        run: "echo Releasing img=$ISO_NAME tag=$TAG_NAME"

      - name: Create release with artifact
        uses: ncipollo/release-action@37c87f6b53fb46d40450c3cac428aa83c8d0055f
        with:
          tag: "ovos-nix-${{needs.build-image.outputs.tag-name  }}"
          artifacts: "output/${{ needs.build-image.outputs.iso-name }}"
          artifactErrorsFailBuild: true
